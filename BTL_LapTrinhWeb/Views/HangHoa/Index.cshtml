
@model IEnumerable<BTL_LapTrinhWeb.ViewModels.HangHoaVM>
@{
    ViewData["Title"] = "Index";
    Layout = "_DanhSachHangHoa";
}

<!-- Single Page Header start -->
@section BreadCum{
    <div class="container-fluid py-5 " style="margin-top:120px; background-color: #f0f0f0;">
        <h1 class="text-center text-black display-6">Sản phẩm</h1>
        <ol class="breadcrumb justify-content-center mb-0">
            <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index" class="text-black">Trang chủ</a></li>
            <li class="breadcrumb-item active text-black-50">Sản phẩm</li>
        </ol>
    </div>
}
<!-- Single Page Header End -->
@await Html.PartialAsync("ProductItem", Model)

<div class="col-12">
    <div class="pagination d-flex justify-content-center mt-5">
        <a href="@Url.Action("Index", new { loai = ViewBag.Loai, sortOrder = ViewBag.SortOrder, page = ViewBag.CurrentPage - 1 })" class="rounded @(ViewBag.CurrentPage == 1 ? "disabled" : "")">&laquo;</a>

        @for (int i = 1; i <= ViewBag.TotalPages; i++)
        {
            if (i == ViewBag.CurrentPage)
            {
                <a href="#" class="active rounded">@i</a>
            }
            else
            {
                <a href="@Url.Action("Index", new { loai = ViewBag.Loai, sortOrder = ViewBag.SortOrder, page = i })" class="rounded">@i</a>
            }
        }

        <a href="@Url.Action("Index", new { loai = ViewBag.Loai, sortOrder = ViewBag.SortOrder, page = ViewBag.CurrentPage + 1 })" class="rounded @(ViewBag.CurrentPage == ViewBag.TotalPages ? "disabled" : "")">&raquo;</a>
    </div>

</div> 