@model IEnumerable<BTL_LapTrinhWeb.Data.HoaDon>

@{
    ViewData["Title"] = "DanhMucDonHang";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

@addTagHelper * , Microsoft.AspNetCore.Mvc.TagHelpers

<div class="container-fluid pt-4 px-4">
    <div class="bg-light text-center rounded p-4">
        <div class="d-flex align-items-center justify-content-between mb-4">
            <h6 class="mb-0">Danh Mục Đơn Hàng</h6>
            @if (TempData["Message"] != null)
            {
                <div class="alert alert-info">
                    @TempData["Message"]
                </div>
            }
        </div>
        <div class="table-responsive">
            <table class=" table text-start align-middle table-bordered table-hover mb-0">
                <thead>
                    <tr>
                        <th scope="col">Mã HD</th>
                        <th scope="col">Ngày Đặt</th>
                        <th scope="col">Ngày Giao</th>
                        <th scope="col">Tên KH</th>
                        <th scope="col">Địa Chỉ</th>
                        <th scope="col">Ghi Chú</th>
                        <th scope="col"></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => item.MaHd)</td>
                            <td>@Html.DisplayFor(modelItem => item.NgayDat)</td>
                            <td>@Html.DisplayFor(modelItem => item.NgayGiao)</td>
                            <td>@Html.DisplayFor(modelItem => item.HoTen)</td>
                            <td>@Html.DisplayFor(modelItem => item.DiaChi)</td>
                            <td>@Html.DisplayFor(modelItem => item.GhiChu)</td>
                            <td><a asp-action="ChiTietDonHang" asp-route-Mahd="@item.MaHd" class="btn btn-sm btn-primary">Details</a></td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>


<div class="col-12">
    <div class="pagination d-flex justify-content-center mt-5">
        <a href="@Url.Action("DanhMucDonHang", new { page = ViewBag.CurrentPage - 1 })" class="rounded"
        @if (ViewBag.CurrentPage == 1)
        {
            <text> aria-hidden="true" class="disabled"</text>
        }> &laquo;</a>

        @{
            int maxPagesToShow = 5;
            int startPage = Math.Max(1, ViewBag.CurrentPage - 2);
            int endPage = Math.Min(ViewBag.TotalPages, startPage + maxPagesToShow - 1);
            if (startPage > 1)
            {
                <a href="@Url.Action("DanhMucDonHang", new { page = 1 })" class="rounded">1</a>
                if (startPage > 2)
                {
                    <span class="mx-2">...</span>
                }
            }
        }

        @for (int z = startPage; z <= endPage; z++)
        {
            if (z == ViewBag.CurrentPage)
            {
                <a href="#" class="active rounded">@z</a>
            }
            else
            {
                <a href="@Url.Action("DanhMucDonHang", new { page = z })" class="rounded">@z</a>
            }
        }

        @{
            if (endPage < ViewBag.TotalPages)
            {
                if (endPage < ViewBag.TotalPages - 1)
                {
                    <span class="mx-2">...</span>
                }
                <a href="@Url.Action("DanhMucDonHang", new { page = ViewBag.TotalPages })" class="rounded">@ViewBag.TotalPages</a>
            }
        }

        <a href="@Url.Action("DanhMucDonHang", new { page = ViewBag.CurrentPage + 1 })" class="rounded"
        @if (ViewBag.CurrentPage == ViewBag.TotalPages)
        {
            <text> aria-hidden="true" class="disabled"</text>
        }> &raquo;</a>
    </div>
</div>


